rules:
  - name: bucket_is_not_configured_with_cors_rules
    query: |
      SELECT
        DISTINCT(a1.*)
      FROM
        aws_s3_buckets AS a1 FULL
        OUTER JOIN aws_s3_bucket_cors_rules AS a2 ON a1.selefra_id = a2.aws_s3_buckets_selefra_id
      WHERE
        aws_s3_buckets_selefra_id IS NULL;
    labels:
      resource_account_id: '{{.account_id}}'
      resource_id: '{{.arn}}'
      resource_region: '{{.region}}'
      resource_type: S3
      bucket_url: 'https://{{.name}}.s3.{{.region}}.amazonaws.com'
    metadata:
      author: Selefra
      description: Ensure to configure secure CORS rules for the Bucket.
      id: SF010117
      provider: AWS
      remediation: remediation/s3/bucket_is_not_configured_with_cors_rules.md
      severity: Low
      tags:
        - Security
        - Misconfiguration
      title: S3 Bucket is not configured with CORS rules
    output: "S3 Bucket is not configured with CORS rules, arn: {{.arn}}"

selefra:
  cloud:
    project: example_project
    organization: example_org
    hostname: app.selefra.io
  connection:
    type: postgres
    username: postgres
    password: pass
    host: localhost
    port: "5432"
    database: postgres
    sslmode: disable
  name: example_project
  cli_version: v0.0.1
  providers:
    - name: aws
      source: selefra/aws
      version: ">=0.0.9,<=0.0.10"
    - name: gcp
      source: selefra/gcp
      version: ">=0.0.9,<=0.0.10"

modules:
  - name: Misconfiguration-S3
    uses:
      - ./sub_module_b/sub_module_b_1
      - ./sub_module_b/sub_module_b_2
      - ./sub_module_a/sub_module_a_1
      - ./sub_module_a/sub_module_a_2
  - name: example_module
    #    uses: ./rules/
    input:
      name: selefra

variables:
  - key: test
    default:
      a: 1
      b: 1
      c: 1

providers:
  - name: aws_01
    cache: 1d
    provider: aws
    resources:
      - aws_s3_buckets
      - aws_s3_accounts
    #  Optional, Repeated. Add an accounts block for every account you want to assume-role into and fetch data from.
    accounts:
      #     Optional. User identification
      - account_name: <UNIQUE ACCOUNT IDENTIFIER>
        #    Optional. Named profile in config or credential file from where Selefra should grab credentials
        shared_config_profile: < PROFILE_NAME >
        #    Optional. Location of shared configuration files
        shared_config_files:
          - <FILE_PATH>
        #   Optional. Location of shared credentials files
        shared_credentials_files:
          - <FILE_PATH>
        #    Optional. Role ARN we want to assume when accessing this account
        role_arn: < YOUR_ROLE_ARN >
        #    Optional. Named role session to grab specific operation under the assumed role
        role_session_name: <SESSION_NAME>
        #    Optional. Any outside of the org account id that has additional control
        external_id: <ID>
        #    Optional. Designated region of servers
        default_region: <REGION_CODE>
        #    Optional. by default assumes all regions
        regions:
          - us-east-1
          - us-west-2
    #    The maximum number of times that a request will be retried for failures. Defaults to 10 retry attempts.
    max_attempts: 10
    #    The maximum back off delay between attempts. The backoff delays exponentially with a jitter based on the number of attempts. Defaults to 30 seconds.
    max_backoff: 30